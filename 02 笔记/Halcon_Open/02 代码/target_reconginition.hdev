<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="18.11.0.1">
<procedure name="main">
<interface/>
<body>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="1">* Image Acquisition 01: Code generated by Image Acquisition 01</c>
<c>* 读取图片</c>
<c>* edge-21.jpg 图片来源于谷歌地图</c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,1]" as_ord="1">read_image (Image, './edge-21.jpg')</l>
<c>* 图片灰度化</c>
<l>rgb1_to_gray (Image, GrayImage)</l>
<c>* 灰度图片二值化, 得到前景区域</c>
<l>threshold (GrayImage, Regions, 80, 255)</l>
<c>* 对整个前景区域做闭运算,完成"膨胀-"的效果</c>
<l>closing_rectangle1(Regions, RegionClosing, 35, 35)</l>
<c>* 分拆前景区域,断开连通域</c>
<l>connection (RegionClosing, ConnectedRegions)</l>
<c>* 通过像素面积来筛选连通域</c>
<l>select_shape (ConnectedRegions, SelectedRegions, ['area','rectangularity'], 'and', [9999,0.4], [299999,1])</l>
<c>* 在进行一次闭运算,填充空洞</c>
<l>closing_rectangle1 (SelectedRegions, RegionClosing1, 120, 120)</l>
<c></c>
<c></c>
<c>*</c>
<l>* area_center (SelectedRegions, Area, Row, Column)</l>
<l>* count_obj (SelectedRegions, Number)</l>
<l>* tuple_sqrt (Area/2, MatrixSqrtID)</l>
<c>*</c>
<l>* for Index := 0 to  Number-1 by 1</l>
<l>*    gen_rectangle2(Rectangle, Row[Index], Column[Index],0,MatrixSqrtID[Index],MatrixSqrtID[Index])</l>
<l>*    fill_up (Rectangle, RegionFillUp)</l>
<l>* endfor</l>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
