<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.1" halcon_version="12.0">
<procedure name="main">
<interface/>
<body>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="1">* Image Acquisition 01: Code generated by Image Acquisition 01</c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,2]" as_ord="1">list_files ('C:/Users/Administrator/Desktop/木板纹理/训练', ['files','follow_links'], ImageFiles)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,3]" as_ord="1">tuple_regexp_select (ImageFiles, ['\\.(tif|tiff|gif|bmp|jpg|jpeg|jp2|png|pcx|pgm|ppm|pbm|xwd|ima|hobj)$','ignore_case'], ImageFiles)</l>
<l>FeaturesExtended:=[]</l>
<l>FeaturesExtended1:=[]</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,2]" as_ord="1">for Index := 0 to |ImageFiles| - 1 by 1</l>
<c>    *1特征提取</c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,3]" as_ord="1">    read_image (Image, ImageFiles[Index])</l>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,4]" as_ord="1">    * Image Acquisition 01: Do something</c>
<l>    dev_close_window()</l>
<l>    get_image_size(Image, Width, Height)</l>
<l>    dev_open_window(0, 0, Width/5, Height/5, 'black', WindowHandle)</l>
<l>    dev_display(Image)</l>
<l>    rgb1_to_gray(Image, GrayImage)</l>
<c>    </c>
<l>    threshold (GrayImage, Regions, 31, 254)</l>
<l>    connection(Regions, ConnectedRegions)</l>
<c>    </c>
<l>    select_shape (ConnectedRegions, SelectedRegions, 'area', 'and', 1.15e+006, 2e+006)</l>
<l>    Classes := ['apple','beech','cherry','maple','oak']</l>
<l>    cooc_feature_image (Image, Image, 6, 90, Energy, Correlation, Homogeneity, Contrast)</l>
<c>    </c>
<l>    sobel_amp (Image, EdgeAmplitude, 'sum_abs',3)</l>
<l>    gray_histo_abs (EdgeAmplitude, EdgeAmplitude, 8, AbsoluteHistoEdgeAmplitude)</l>
<l>    FeaturesExtended := [Energy,Correlation,Homogeneity,Contrast]</l>
<l>    FeaturesExtended := [FeaturesExtended,AbsoluteHistoEdgeAmplitude]</l>
<l>    cooc_feature_image (SelectedRegions, Image, 6, 90, Energy, Correlation, Homogeneity, Contrast)</l>
<c>    </c>
<l>    sobel_amp (Image, EdgeAmplitude, 'sum_abs', 3)</l>
<c>    </c>
<l>    gray_histo_abs (EdgeAmplitude, EdgeAmplitude, 8, AbsoluteHistoEdgeAmplitude)</l>
<l>    FeaturesExtended1 := [FeaturesExtended,Energy,Correlation,Homogeneity,Contrast]</l>
<l>    FeaturesExtended1 := [FeaturesExtended1,AbsoluteHistoEdgeAmplitude]</l>
<l>    NumFeatures := |FeaturesExtended1|</l>
<l>    NumClasses := |Classes|</l>
<l>    NumHidden := 15</l>
<c>    *2创建分类器</c>
<l>    create_class_mlp (NumFeatures, 15, 5, 'softmax', 'normalization', 10, 42, MLPHandle)</l>
<c>    </c>
<l>    for i := 0 to |ImageFiles| - 1 by 1</l>
<l>        read_image (Image, ImageFiles[i])</l>
<c>       </c>
<l>        rgb1_to_gray(Image, GrayImage)</l>
<c>    </c>
<l>        threshold (GrayImage, Regions, 31, 254)</l>
<l>        connection(Regions, ConnectedRegions)</l>
<c>        </c>
<l>        select_shape (ConnectedRegions, SelectedRegions, 'area', 'and', 1.15e+006, 2e+006)</l>
<l>        cooc_feature_image (SelectedRegions, Image, 6, 90, Energy, Correlation, Homogeneity, Contrast)</l>
<c>    </c>
<l>        sobel_amp (Image, EdgeAmplitude, 'sum_abs', 3)</l>
<l>        gray_histo_abs (EdgeAmplitude, EdgeAmplitude, 8, AbsoluteHistoEdgeAmplitude)</l>
<l>        FeaturesExtended := [Energy,Correlation,Homogeneity,Contrast]</l>
<l>        FeaturesExtended := [FeaturesExtended,AbsoluteHistoEdgeAmplitude]</l>
<l>        cooc_feature_image (Image, Image, 6, 90, Energy, Correlation, Homogeneity, Contrast)</l>
<c>        </c>
<l>        sobel_amp (Image, EdgeAmplitude, 'sum_abs', 3)</l>
<l>        gray_histo_abs (EdgeAmplitude, EdgeAmplitude, 8, AbsoluteHistoEdgeAmplitude)</l>
<l>        FeaturesExtended1 := [FeaturesExtended,Energy,Correlation,Homogeneity,Contrast]</l>
<l>        FeaturesExtended1 := [FeaturesExtended1,AbsoluteHistoEdgeAmplitude]</l>
<l>        FeatureVector := real(FeaturesExtended1)</l>
<c>        *3添加样本</c>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="1">        * Image Acquisition 01: Code generated by Image Acquisition 01</c>
<c>     </c>
<l>        add_sample_class_mlp (MLPHandle, FeatureVector, i)</l>
<l>    endfor</l>
<c>   *4训练分类器</c>
<l>    train_class_mlp (MLPHandle, 200, 1, 0.0001, Error, ErrorLog)</l>
<l>    stop()</l>
<l>    write_class_mlp(MLPHandle, 'D://1.gmc')</l>
<l>   * for i := 0 to |ImageFiles| - 1 by 1</l>
<l>       * read_image (Image, ImageFiles[i])</l>
<c>       </c>
<l>        read_image (Image, 'C:/Users/Administrator/Desktop/木板纹理/训练/20.bmp')</l>
<l>        rgb1_to_gray(Image, GrayImage)</l>
<c>    </c>
<l>        threshold (GrayImage, Regions, 31, 254)</l>
<l>        connection(Regions, ConnectedRegions)</l>
<c>        </c>
<l>        select_shape (ConnectedRegions, SelectedRegions, 'area', 'and', 1.15e+006, 2e+006)</l>
<l>        cooc_feature_image (SelectedRegions, Image, 6, 90, Energy, Correlation, Homogeneity, Contrast)</l>
<c>    </c>
<l>        sobel_amp (Image, EdgeAmplitude, 'sum_abs', 3)</l>
<l>        gray_histo_abs (EdgeAmplitude, EdgeAmplitude, 8, AbsoluteHistoEdgeAmplitude)</l>
<l>        FeaturesExtended := [Energy,Correlation,Homogeneity,Contrast]</l>
<l>        FeaturesExtended := [FeaturesExtended,AbsoluteHistoEdgeAmplitude]</l>
<l>        cooc_feature_image (Image, Image, 6, 90, Energy, Correlation, Homogeneity, Contrast)</l>
<c>        </c>
<l>        sobel_amp (Image, EdgeAmplitude, 'sum_abs', 3)</l>
<l>        gray_histo_abs (EdgeAmplitude, EdgeAmplitude, 8, AbsoluteHistoEdgeAmplitude)</l>
<l>        FeaturesExtended1 := [FeaturesExtended,Energy,Correlation,Homogeneity,Contrast]</l>
<l>        FeaturesExtended1 := [FeaturesExtended1,AbsoluteHistoEdgeAmplitude]</l>
<l>        FeatureVector := real(FeaturesExtended1)</l>
<c>        *5识别</c>
<l>        classify_class_mlp (MLPHandle, FeatureVector, 1, FoundClassIDs, k)</l>
<l>        dev_display(Image)</l>
<l>        ImageFiles1:= 'found class:   ' + Classes[FoundClassIDs[0]]</l>
<l>        disp_message(WindowHandle, ImageFiles1, 'image', 12, 12, 'black', 'true')</l>
<c>        </c>
<l>         stop()</l>
<l>    endfor</l>
<c>    </c>
<c>    </c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[3,1]" as_ord="1">*endfor</l>
<l>read_image (Image20, 'C:/Users/Administrator/Desktop/木板纹理/训练/20.bmp')</l>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
