<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="18.11.0.1">
<procedure name="main">
<interface/>
<body>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="1">* Image Acquisition 01: Code generated by Image Acquisition 01</c>
<c></c>
<c>* 1.读入图像</c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,1]" as_ord="1">read_image (Image, './pic_hz.jpg')</l>
<c>* 2.灰度化</c>
<l>rgb1_to_gray (Image, GrayImage)</l>
<c></c>
<c>* 3.预处理,线性变换</c>
<l>scale_image (GrayImage, ImageScaled, 1.6242, 0)</l>
<c></c>
<c>* 4.字符分割</c>
<c></c>
<c>* 4.1 二值化</c>
<l>threshold (GrayImage, Regions, 9, 73)</l>
<c>* 4.2 分割连通域</c>
<l>connection (Regions, ConnectedRegions)</l>
<c></c>
<c>* 4.3 通过面积来筛选连通域</c>
<l>select_shape (ConnectedRegions, SelectedRegions, 'area', 'and', 400, 1000)</l>
<c></c>
<c></c>
<c>* 5. 字体旋转正过来</c>
<c></c>
<c>* 5.1 四个区域联合成一个</c>
<l>union1 (SelectedRegions, RegionUnion)</l>
<c>* 5.2 形状转换(总连通域转换成一个带方向的矩形) 结果与视频不一致,改成了椭圆</c>
<l>shape_trans (RegionUnion, RegionTrans, 'ellipse')</l>
<c>* 5.3 求椭圆的偏转角度</c>
<l>orientation_region (RegionTrans, Phi)</l>
<c>* 5.4 求椭圆区域的中心点 行列坐标</c>
<l>area_center (RegionTrans, Area, Row, Column)</l>
<c>* 5.5 求旋转矩阵</c>
<l>vector_angle_to_rigid (Row, Column, Phi, Row, Column, rad(0), HomMat2D)</l>
<c>* 5.6 对区域和图像执行仿射变换</c>
<l>affine_trans_region (RegionTrans, RegionAffineTrans, HomMat2D, 'nearest_neighbor')</l>
<l>affine_trans_image (Image, ImageAffineTrans, HomMat2D, 'constant', 'false')</l>
<c></c>
<c>* 5.7 抠图</c>
<l>reduce_domain (ImageAffineTrans, RegionAffineTrans, ImageReduced)</l>
<c></c>
<c>* 6. 分割排序</c>
<c></c>
<c>* 6.1 再进行灰度化、二值化、分割和面积筛选</c>
<l>rgb1_to_gray (ImageReduced, GrayImage1)</l>
<l>threshold (GrayImage1, Regions1, 0, 68)</l>
<l>closing_circle (Regions1, RegionClosing, 1)</l>
<l>connection (RegionClosing, ConnectedRegions1)</l>
<l>select_shape (ConnectedRegions1, SelectedRegions1, 'area', 'and', 285.47, 821.8)</l>
<c></c>
<c>* 6.2 按列优先排序</c>
<l>sort_region (SelectedRegions1, SortedRegions, 'first_point', 'true', 'column')</l>
<l>count_obj (SortedRegions, Number)</l>
<c></c>
<c>* 6.3 选中查看</c>
<l>for i:=1 to Number by 1</l>
<l>    select_obj (SortedRegions, ObjectSelected, i)</l>
<l>endfor</l>
<c></c>
<c>* 6.4 准备制作trf文件，使得汉字与字符图像关联</c>
<l>words := ['编','著','罗','超']</l>
<l>filePath := 'D://word.trf'</l>
<c></c>
<c>* 6.5 关联制作OCR</c>
<l>for i:=1 to Number by 1</l>
<l>    select_obj (SortedRegions, SignalWord, i)</l>
<l>    append_ocr_trainf (SignalWord, ImageAffineTrans, words[i-1], filePath)</l>
<l>endfor</l>
<c></c>
<c>* 6.6 训练</c>
<c>* 6.6.1 训练准备</c>
<l>FontFile := 'D://word.omc'</l>
<l>read_ocr_trainf_names (filePath, CharacterNames, CharacterCount)</l>
<l>NumHidden := 20</l>
<c>* 6.7.1 创建神经网络分类器</c>
<l>create_ocr_class_mlp(10,30,'constant','default',CharacterNames,80,'none',10,42,OCRHandle)</l>
<c>* 6.7.2 训练分类器</c>
<l>trainf_ocr_class_mlp (OCRHandle, filePath, 200, 1, 0.01, Error, ErrorLog)</l>
<c>* 6.7.3 保存omc文件</c>
<l>write_ocr_class_mlp (OCRHandle, FontFile)</l>
<c>* 6.7.4 清除句柄</c>
<l>clear_ocr_class_mlp (OCRHandle)</l>
<c></c>
<c>* 7.识别文字</c>
<l>read_ocr_class_mlp (FontFile, OCRHandle1)</l>
<l>do_ocr_multi_class_mlp (SortedRegions, ImageReduced, OCRHandle1, Class, Confidence)</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
